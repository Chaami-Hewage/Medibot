
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002d2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  000002d2  00000346  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000362  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000394  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000003d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a73  00000000  00000000  00000458  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000065b  00000000  00000000  00000ecb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000061b  00000000  00000000  00001526  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000110  00000000  00000000  00001b44  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b2  00000000  00000000  00001c54  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000029a  00000000  00000000  00002006  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  000022a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ed       	ldi	r30, 0xD2	; 210
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 37       	cpi	r26, 0x7C	; 124
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 20 01 	call	0x240	; 0x240 <main>
  7a:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <i2c_init>:
}

void lcd_lef_sh()
{
	lcd_cmd(0x18);      //----Command for Left Shift
	delay(200);
  82:	82 e6       	ldi	r24, 0x62	; 98
  84:	80 b9       	out	0x00, r24	; 0
  86:	84 e0       	ldi	r24, 0x04	; 4
  88:	86 bf       	out	0x36, r24	; 54
  8a:	11 b8       	out	0x01, r1	; 1
  8c:	08 95       	ret

0000008e <i2c_start>:
  8e:	84 ea       	ldi	r24, 0xA4	; 164
  90:	86 bf       	out	0x36, r24	; 54
  92:	06 b6       	in	r0, 0x36	; 54
  94:	07 fe       	sbrs	r0, 7
  96:	fd cf       	rjmp	.-6      	; 0x92 <i2c_start+0x4>
  98:	08 95       	ret

0000009a <i2c_write>:
  9a:	83 b9       	out	0x03, r24	; 3
  9c:	84 e8       	ldi	r24, 0x84	; 132
  9e:	86 bf       	out	0x36, r24	; 54
  a0:	06 b6       	in	r0, 0x36	; 54
  a2:	07 fe       	sbrs	r0, 7
  a4:	fd cf       	rjmp	.-6      	; 0xa0 <i2c_write+0x6>
  a6:	08 95       	ret

000000a8 <delay>:
  a8:	99 23       	and	r25, r25
  aa:	54 f4       	brge	.+20     	; 0xc0 <delay+0x18>
  ac:	08 95       	ret
  ae:	21 50       	subi	r18, 0x01	; 1
  b0:	31 09       	sbc	r19, r1
  b2:	e9 f7       	brne	.-6      	; 0xae <delay+0x6>
  b4:	4f 5f       	subi	r20, 0xFF	; 255
  b6:	5f 4f       	sbci	r21, 0xFF	; 255
  b8:	84 17       	cp	r24, r20
  ba:	95 07       	cpc	r25, r21
  bc:	1c f4       	brge	.+6      	; 0xc4 <delay+0x1c>
  be:	08 95       	ret
  c0:	40 e0       	ldi	r20, 0x00	; 0
  c2:	50 e0       	ldi	r21, 0x00	; 0
  c4:	29 e7       	ldi	r18, 0x79	; 121
  c6:	30 e0       	ldi	r19, 0x00	; 0
  c8:	f2 cf       	rjmp	.-28     	; 0xae <delay+0x6>

000000ca <toggle>:
  ca:	19 9a       	sbi	0x03, 1	; 3
  cc:	84 e8       	ldi	r24, 0x84	; 132
  ce:	86 bf       	out	0x36, r24	; 54
  d0:	06 b6       	in	r0, 0x36	; 54
  d2:	07 fe       	sbrs	r0, 7
  d4:	fd cf       	rjmp	.-6      	; 0xd0 <toggle+0x6>
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 54 00 	call	0xa8	; 0xa8 <delay>
  de:	19 98       	cbi	0x03, 1	; 3
  e0:	84 e8       	ldi	r24, 0x84	; 132
  e2:	86 bf       	out	0x36, r24	; 54
  e4:	06 b6       	in	r0, 0x36	; 54
  e6:	07 fe       	sbrs	r0, 7
  e8:	fd cf       	rjmp	.-6      	; 0xe4 <toggle+0x1a>
  ea:	08 95       	ret

000000ec <lcd_cmd_hf>:
  ec:	18 98       	cbi	0x03, 0	; 3
  ee:	94 e8       	ldi	r25, 0x84	; 132
  f0:	96 bf       	out	0x36, r25	; 54
  f2:	06 b6       	in	r0, 0x36	; 54
  f4:	07 fe       	sbrs	r0, 7
  f6:	fd cf       	rjmp	.-6      	; 0xf2 <lcd_cmd_hf+0x6>
  f8:	93 b1       	in	r25, 0x03	; 3
  fa:	9f 70       	andi	r25, 0x0F	; 15
  fc:	93 b9       	out	0x03, r25	; 3
  fe:	94 e8       	ldi	r25, 0x84	; 132
 100:	96 bf       	out	0x36, r25	; 54
 102:	06 b6       	in	r0, 0x36	; 54
 104:	07 fe       	sbrs	r0, 7
 106:	fd cf       	rjmp	.-6      	; 0x102 <lcd_cmd_hf+0x16>
 108:	93 b1       	in	r25, 0x03	; 3
 10a:	80 7f       	andi	r24, 0xF0	; 240
 10c:	89 2b       	or	r24, r25
 10e:	83 b9       	out	0x03, r24	; 3
 110:	84 e8       	ldi	r24, 0x84	; 132
 112:	86 bf       	out	0x36, r24	; 54
 114:	06 b6       	in	r0, 0x36	; 54
 116:	07 fe       	sbrs	r0, 7
 118:	fd cf       	rjmp	.-6      	; 0x114 <lcd_cmd_hf+0x28>
 11a:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 11e:	08 95       	ret

00000120 <lcd_cmd>:
 120:	cf 93       	push	r28
 122:	c8 2f       	mov	r28, r24
 124:	18 98       	cbi	0x03, 0	; 3
 126:	84 e8       	ldi	r24, 0x84	; 132
 128:	86 bf       	out	0x36, r24	; 54
 12a:	06 b6       	in	r0, 0x36	; 54
 12c:	07 fe       	sbrs	r0, 7
 12e:	fd cf       	rjmp	.-6      	; 0x12a <lcd_cmd+0xa>
 130:	83 b1       	in	r24, 0x03	; 3
 132:	8f 70       	andi	r24, 0x0F	; 15
 134:	83 b9       	out	0x03, r24	; 3
 136:	84 e8       	ldi	r24, 0x84	; 132
 138:	86 bf       	out	0x36, r24	; 54
 13a:	06 b6       	in	r0, 0x36	; 54
 13c:	07 fe       	sbrs	r0, 7
 13e:	fd cf       	rjmp	.-6      	; 0x13a <lcd_cmd+0x1a>
 140:	83 b1       	in	r24, 0x03	; 3
 142:	9c 2f       	mov	r25, r28
 144:	90 7f       	andi	r25, 0xF0	; 240
 146:	89 2b       	or	r24, r25
 148:	83 b9       	out	0x03, r24	; 3
 14a:	84 e8       	ldi	r24, 0x84	; 132
 14c:	86 bf       	out	0x36, r24	; 54
 14e:	06 b6       	in	r0, 0x36	; 54
 150:	07 fe       	sbrs	r0, 7
 152:	fd cf       	rjmp	.-6      	; 0x14e <lcd_cmd+0x2e>
 154:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 158:	83 b1       	in	r24, 0x03	; 3
 15a:	8f 70       	andi	r24, 0x0F	; 15
 15c:	83 b9       	out	0x03, r24	; 3
 15e:	84 e8       	ldi	r24, 0x84	; 132
 160:	86 bf       	out	0x36, r24	; 54
 162:	06 b6       	in	r0, 0x36	; 54
 164:	07 fe       	sbrs	r0, 7
 166:	fd cf       	rjmp	.-6      	; 0x162 <lcd_cmd+0x42>
 168:	23 b1       	in	r18, 0x03	; 3
 16a:	30 e1       	ldi	r19, 0x10	; 16
 16c:	c3 9f       	mul	r28, r19
 16e:	c0 01       	movw	r24, r0
 170:	11 24       	eor	r1, r1
 172:	82 2b       	or	r24, r18
 174:	83 b9       	out	0x03, r24	; 3
 176:	84 e8       	ldi	r24, 0x84	; 132
 178:	86 bf       	out	0x36, r24	; 54
 17a:	06 b6       	in	r0, 0x36	; 54
 17c:	07 fe       	sbrs	r0, 7
 17e:	fd cf       	rjmp	.-6      	; 0x17a <lcd_cmd+0x5a>
 180:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 184:	cf 91       	pop	r28
 186:	08 95       	ret

00000188 <lcd_init>:
 188:	80 e3       	ldi	r24, 0x30	; 48
 18a:	0e 94 76 00 	call	0xec	; 0xec <lcd_cmd_hf>
 18e:	80 e3       	ldi	r24, 0x30	; 48
 190:	0e 94 76 00 	call	0xec	; 0xec <lcd_cmd_hf>
 194:	80 e2       	ldi	r24, 0x20	; 32
 196:	0e 94 76 00 	call	0xec	; 0xec <lcd_cmd_hf>
 19a:	88 e2       	ldi	r24, 0x28	; 40
 19c:	0e 94 90 00 	call	0x120	; 0x120 <lcd_cmd>
 1a0:	8c e0       	ldi	r24, 0x0C	; 12
 1a2:	0e 94 90 00 	call	0x120	; 0x120 <lcd_cmd>
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	0e 94 90 00 	call	0x120	; 0x120 <lcd_cmd>
 1ac:	86 e0       	ldi	r24, 0x06	; 6
 1ae:	0e 94 90 00 	call	0x120	; 0x120 <lcd_cmd>
 1b2:	80 e8       	ldi	r24, 0x80	; 128
 1b4:	0e 94 90 00 	call	0x120	; 0x120 <lcd_cmd>
 1b8:	08 95       	ret

000001ba <lcd_dwr>:
 1ba:	cf 93       	push	r28
 1bc:	c8 2f       	mov	r28, r24
 1be:	18 9a       	sbi	0x03, 0	; 3
 1c0:	84 e8       	ldi	r24, 0x84	; 132
 1c2:	86 bf       	out	0x36, r24	; 54
 1c4:	06 b6       	in	r0, 0x36	; 54
 1c6:	07 fe       	sbrs	r0, 7
 1c8:	fd cf       	rjmp	.-6      	; 0x1c4 <lcd_dwr+0xa>
 1ca:	83 b1       	in	r24, 0x03	; 3
 1cc:	8f 70       	andi	r24, 0x0F	; 15
 1ce:	83 b9       	out	0x03, r24	; 3
 1d0:	84 e8       	ldi	r24, 0x84	; 132
 1d2:	86 bf       	out	0x36, r24	; 54
 1d4:	06 b6       	in	r0, 0x36	; 54
 1d6:	07 fe       	sbrs	r0, 7
 1d8:	fd cf       	rjmp	.-6      	; 0x1d4 <lcd_dwr+0x1a>
 1da:	83 b1       	in	r24, 0x03	; 3
 1dc:	9c 2f       	mov	r25, r28
 1de:	90 7f       	andi	r25, 0xF0	; 240
 1e0:	89 2b       	or	r24, r25
 1e2:	83 b9       	out	0x03, r24	; 3
 1e4:	84 e8       	ldi	r24, 0x84	; 132
 1e6:	86 bf       	out	0x36, r24	; 54
 1e8:	06 b6       	in	r0, 0x36	; 54
 1ea:	07 fe       	sbrs	r0, 7
 1ec:	fd cf       	rjmp	.-6      	; 0x1e8 <lcd_dwr+0x2e>
 1ee:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 1f2:	83 b1       	in	r24, 0x03	; 3
 1f4:	8f 70       	andi	r24, 0x0F	; 15
 1f6:	83 b9       	out	0x03, r24	; 3
 1f8:	84 e8       	ldi	r24, 0x84	; 132
 1fa:	86 bf       	out	0x36, r24	; 54
 1fc:	06 b6       	in	r0, 0x36	; 54
 1fe:	07 fe       	sbrs	r0, 7
 200:	fd cf       	rjmp	.-6      	; 0x1fc <lcd_dwr+0x42>
 202:	23 b1       	in	r18, 0x03	; 3
 204:	30 e1       	ldi	r19, 0x10	; 16
 206:	c3 9f       	mul	r28, r19
 208:	c0 01       	movw	r24, r0
 20a:	11 24       	eor	r1, r1
 20c:	82 2b       	or	r24, r18
 20e:	83 b9       	out	0x03, r24	; 3
 210:	84 e8       	ldi	r24, 0x84	; 132
 212:	86 bf       	out	0x36, r24	; 54
 214:	06 b6       	in	r0, 0x36	; 54
 216:	07 fe       	sbrs	r0, 7
 218:	fd cf       	rjmp	.-6      	; 0x214 <lcd_dwr+0x5a>
 21a:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 21e:	cf 91       	pop	r28
 220:	08 95       	ret

00000222 <lcd_msg>:
 222:	cf 93       	push	r28
 224:	df 93       	push	r29
 226:	ec 01       	movw	r28, r24
 228:	88 81       	ld	r24, Y
 22a:	88 23       	and	r24, r24
 22c:	31 f0       	breq	.+12     	; 0x23a <lcd_msg+0x18>
 22e:	21 96       	adiw	r28, 0x01	; 1
 230:	0e 94 dd 00 	call	0x1ba	; 0x1ba <lcd_dwr>
 234:	89 91       	ld	r24, Y+
 236:	81 11       	cpse	r24, r1
 238:	fb cf       	rjmp	.-10     	; 0x230 <lcd_msg+0xe>
 23a:	df 91       	pop	r29
 23c:	cf 91       	pop	r28
 23e:	08 95       	ret

00000240 <main>:
#include "i2c(ii).h"


int main(void)
{
	i2c_init();
 240:	0e 94 41 00 	call	0x82	; 0x82 <i2c_init>
	i2c_start();
 244:	0e 94 47 00 	call	0x8e	; 0x8e <i2c_start>
	i2c_write(0x70);
 248:	80 e7       	ldi	r24, 0x70	; 112
 24a:	0e 94 4d 00 	call	0x9a	; 0x9a <i2c_write>
	lcd_init();
 24e:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_init>
	
	while (1)
	{
		lcd_cmd(0x80);
 252:	80 e8       	ldi	r24, 0x80	; 128
 254:	0e 94 90 00 	call	0x120	; 0x120 <lcd_cmd>
		lcd_msg("   Hey there!");
 258:	80 e6       	ldi	r24, 0x60	; 96
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	0e 94 11 01 	call	0x222	; 0x222 <lcd_msg>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 260:	2f ef       	ldi	r18, 0xFF	; 255
 262:	89 e6       	ldi	r24, 0x69	; 105
 264:	98 e1       	ldi	r25, 0x18	; 24
 266:	21 50       	subi	r18, 0x01	; 1
 268:	80 40       	sbci	r24, 0x00	; 0
 26a:	90 40       	sbci	r25, 0x00	; 0
 26c:	e1 f7       	brne	.-8      	; 0x266 <main+0x26>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <main+0x30>
 270:	00 00       	nop
		_delay_ms(1000);
		lcd_cmd(0xC0);
 272:	80 ec       	ldi	r24, 0xC0	; 192
 274:	0e 94 90 00 	call	0x120	; 0x120 <lcd_cmd>
 278:	2f ef       	ldi	r18, 0xFF	; 255
 27a:	89 e6       	ldi	r24, 0x69	; 105
 27c:	98 e1       	ldi	r25, 0x18	; 24
 27e:	21 50       	subi	r18, 0x01	; 1
 280:	80 40       	sbci	r24, 0x00	; 0
 282:	90 40       	sbci	r25, 0x00	; 0
 284:	e1 f7       	brne	.-8      	; 0x27e <main+0x3e>
 286:	00 c0       	rjmp	.+0      	; 0x288 <main+0x48>
 288:	00 00       	nop
		_delay_ms(1000);
		lcd_msg("Heater is ");
 28a:	8e e6       	ldi	r24, 0x6E	; 110
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	0e 94 11 01 	call	0x222	; 0x222 <lcd_msg>
		lcd_msg("ON");
 292:	89 e7       	ldi	r24, 0x79	; 121
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	0e 94 11 01 	call	0x222	; 0x222 <lcd_msg>
		lcd_msg("!");
 29a:	8c e6       	ldi	r24, 0x6C	; 108
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	0e 94 11 01 	call	0x222	; 0x222 <lcd_msg>
 2a2:	2f ef       	ldi	r18, 0xFF	; 255
 2a4:	89 e6       	ldi	r24, 0x69	; 105
 2a6:	98 e1       	ldi	r25, 0x18	; 24
 2a8:	21 50       	subi	r18, 0x01	; 1
 2aa:	80 40       	sbci	r24, 0x00	; 0
 2ac:	90 40       	sbci	r25, 0x00	; 0
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <main+0x68>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <main+0x72>
 2b2:	00 00       	nop
		_delay_ms(1000);
		lcd_cmd(0x01);
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	0e 94 90 00 	call	0x120	; 0x120 <lcd_cmd>
 2ba:	2f ef       	ldi	r18, 0xFF	; 255
 2bc:	89 e6       	ldi	r24, 0x69	; 105
 2be:	98 e1       	ldi	r25, 0x18	; 24
 2c0:	21 50       	subi	r18, 0x01	; 1
 2c2:	80 40       	sbci	r24, 0x00	; 0
 2c4:	90 40       	sbci	r25, 0x00	; 0
 2c6:	e1 f7       	brne	.-8      	; 0x2c0 <main+0x80>
 2c8:	00 c0       	rjmp	.+0      	; 0x2ca <main+0x8a>
 2ca:	00 00       	nop
 2cc:	c2 cf       	rjmp	.-124    	; 0x252 <main+0x12>

000002ce <_exit>:
 2ce:	f8 94       	cli

000002d0 <__stop_program>:
 2d0:	ff cf       	rjmp	.-2      	; 0x2d0 <__stop_program>
